<?xml version="1.0"?>
<launch>

  <!-- startup simulated world -->
  <include file="$(find gazebo_worlds)/launch/empty_world.launch" />

  <!-- send quanjo urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find seneka_ugv_description)/urdf/ugv_robot.urdf.xacro'" />

  <!-- send sensornode urdf to param server -->
  <param name="sensornode_description" command="$(find xacro)/xacro.py '$(find seneka_ugv_description)/urdf/sensornode.urdf.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_quanjo" pkg="gazebo" type="spawn_model" args="-urdf -param robot_description -model quanjo -z 0.1" respawn="false" output="screen" />
  <node name="spawn_gazebo_sensornode" pkg="gazebo" type="spawn_model" args="-urdf -param sensornode_description -model sensornode -x 2 -y 2 -z 1" respawn="false" output="screen" />

  <!-- Controller Manager -->
  <include file="$(find pr2_controller_manager)/controller_manager.launch" />

  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration" args="pub /calibrated std_msgs/Bool true" />

  <rosparam file="$(find seneka_ugv_description)/seneka_gazebo/controller/ugv_controller.yaml" command="load"/>

 <node name="arm_controller_spawner" pkg="pr2_controller_manager" type="spawner" args="left_arm_controller right_arm_controller" />

  <group ns="left_arm_controller">
<node name="left_arm_joint_trajectory_action_node" pkg="joint_trajectory_action" type="joint_trajectory_action" />
  </group>

  <group ns="right_arm_controller">
<node name="right_arm_joint_trajectory_action_node" pkg="joint_trajectory_action" type="joint_trajectory_action" />
  </group>

</launch>
