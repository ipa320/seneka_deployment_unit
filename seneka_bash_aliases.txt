# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'

alias con-quanjo='ssh -X quanjo@192.168.0.1'
alias ctk='roscd; cd ..; catkin_make'

# ur10 aliases
alias start-arms='roslaunch seneka_ugv_description ugv_bringup.launch robot_ip_r:=192.168.1.12 robot_ip_l:=192.168.1.11'
alias start-planning='roslaunch seneka_moveit_config move_group.launch'
alias start-vision='roslaunch seneka_sensornode_detection sensornode_detection.launch'
alias start-vision-topic='rostopic hz /fiducials/detect_fiducials'
alias start-pnp='roslaunch seneka_pnp seneka_pnp.launch'
alias start-rviz='roslaunch seneka_moveit_config moveit_rviz.launch'
alias start-image='rosrun image_view image_view image:=/fiducials/image'
alias start-nodepose='rosrun tf tf_echo quanjo_body sensornode'
alias start-calib='rosservice call /sensornode_detection/calibrateCamera'

alias echo-action='echo "rostopic pub /seneka_pick_and_place/goal seneka_pnp/QuanjoManipulationActionGoal"'
alias echo-gitcmd='echo "git remote set-url netw ssh://matthias@192.168.0.4/home/matthias/groovy_workspace/catkin_ws/src/seneka_deployment_unit"'

alias start-pnp-pregrasp='roslaunch seneka_pnp seneka_pnp.launch start_state:="pregrasp"'
alias start-pnp-collisionfree='roslaunch seneka_pnp seneka_pnp.launch start_state:="collision_free"'

alias preGraspToHome='rosservice call /seneka_pnp/setTransition preGraspToHome'

alias node-extract='sleep 1; rosservice call /extend'
alias node-retract='sleep 1; rosservice call /retract'
alias node-joints='rostopic echo /sensornode/joint_states'


alias merge-quanjo-ipc='roscd seneka_deployment_unit; cd ..; git fetch; git merge origin/quanjo-ipc; ctk'
alias ctk='roscd; cd ..; catkin_make'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi


#source /opt/ros/fuerte/setup.bash
#source /home/matthias/fuerte_workspace/setup.bash
#echo "Fuerte Active"

source /opt/ros/groovy/setup.bash
source /home/matthias/groovy_workspace/catkin_ws/devel/setup.bash
export ROS_PACKAGE_PATH=/home/matthias/groovy_workspace:$ROS_PACKAGE_PATH
export ROS_PACKAGE_PATH=/home/matthias/groovy_workspace/catkin_ws/src:$ROS_PACKAGE_PATH
export ROS_PACKAGE_PATH=/home/matthias/groovy_workspace/catkin_ws/src/seneka_ugv_description:$ROS_PACKAGE_PATH
echo "Groovy Active"

#source /opt/ros/hydro/setup.bash
#source /home/matthias/hydro_workspace/catkin_ws/devel/setup.bash
#export ROS_PACKAGE_PATH=/home/matthias/hydro_workspace/catkin_ws/src:$ROS_PACKAGE_PATH
#export ROS_PACKAGE_PATH=/home/matthias/hydro_workspace:$ROS_PACKAGE_PATH
#echo "Hydro Active"
